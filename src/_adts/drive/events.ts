// automatically generated by the FlatBuffers compiler, do not modify

import { CarDriveEvent, CarDriveEventT } from '../drive/car-drive-event.js';
import { CarScanEvent, CarScanEventT } from '../drive/car-scan-event.js';
import { LayoutEvent, LayoutEventT } from '../drive/layout-event.js';


export enum Events {
  NONE = 0,
  CarScanEvent = 1,
  LayoutEvent = 2,
  CarDriveEvent = 3
}

export function unionToEvents(
  type: Events,
  accessor: (obj:CarDriveEvent|CarScanEvent|LayoutEvent) => CarDriveEvent|CarScanEvent|LayoutEvent|null
): CarDriveEvent|CarScanEvent|LayoutEvent|null {
  switch(Events[type]) {
    case 'NONE': return null; 
    case 'CarScanEvent': return accessor(new CarScanEvent())! as CarScanEvent;
    case 'LayoutEvent': return accessor(new LayoutEvent())! as LayoutEvent;
    case 'CarDriveEvent': return accessor(new CarDriveEvent())! as CarDriveEvent;
    default: return null;
  }
}

export function unionListToEvents(
  type: Events, 
  accessor: (index: number, obj:CarDriveEvent|CarScanEvent|LayoutEvent) => CarDriveEvent|CarScanEvent|LayoutEvent|null, 
  index: number
): CarDriveEvent|CarScanEvent|LayoutEvent|null {
  switch(Events[type]) {
    case 'NONE': return null; 
    case 'CarScanEvent': return accessor(index, new CarScanEvent())! as CarScanEvent;
    case 'LayoutEvent': return accessor(index, new LayoutEvent())! as LayoutEvent;
    case 'CarDriveEvent': return accessor(index, new CarDriveEvent())! as CarDriveEvent;
    default: return null;
  }
}
